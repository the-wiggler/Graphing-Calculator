# .github/workflows/cmake.yml
name: CMake Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release, Debug]

        # ─── compilers ────────────────────────────────────────────────────────────
        c_compiler:  [gcc, clang, cl]
        include:
          # Windows → MSVC
          - os: windows-latest
            c_compiler:  cl
            cpp_compiler: cl

          # Linux → GCC
          - os: ubuntu-latest
            c_compiler:  gcc
            cpp_compiler: g++

          # Linux → Clang
          - os: ubuntu-latest
            c_compiler:  clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
    steps:
    # ──────────────────────────────────────────────────────────────────────────────
    - name: Checkout repository
      uses: actions/checkout@v4

    # ─── SDL2 for Linux ───────────────────────────────────────────────────────────
    - name: Install SDL2 (Linux only)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libsdl2-dev libsdl2-ttf-dev

    # ─── SDL2 for Windows ─────────────────────────────────────────────────────────
    - name: Setup SDL2 (Windows only)
      if: runner.os == 'Windows'
      shell: bash            # ← make the step run under bash
      run: |
        set -euo pipefail

        # Download pre-built binaries
        curl -L -o SDL2.zip     https://www.libsdl.org/release/SDL2-devel-2.28.2-VC.zip
        curl -L -o SDL2_ttf.zip https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-devel-2.20.1-VC.zip

        7z x SDL2.zip     -oSDL2
        7z x SDL2_ttf.zip -oSDL2_ttf

        # Tell later steps where the packages live
        echo "SDL2_DIR=${GITHUB_WORKSPACE}/SDL2/SDL2-2.28.2"             >> "$GITHUB_ENV"
        echo "SDL2_TTF_DIR=${GITHUB_WORKSPACE}/SDL2_ttf/SDL2_ttf-2.20.1" >> "$GITHUB_ENV"

    # ─── reusable path -----------------------------------------------------------
    - name: Define build directory
      id: paths
      shell: bash
      run: echo "build_dir=${GITHUB_WORKSPACE}/build" >> "$GITHUB_OUTPUT"

    # ─── configure ---------------------------------------------------------------
    - name: Configure CMake
      run: >
        cmake
        -B ${{ steps.paths.outputs.build_dir }}
        -S ${{ github.workspace }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_PREFIX_PATH="${{ env.SDL2_DIR }};${{ env.SDL2_TTF_DIR }}"

    # ─── build --------------------------------------------------------------------
    - name: Build
      run: cmake --build ${{ steps.paths.outputs.build_dir }} --config ${{ matrix.build_type }}

    # ─── test ---------------------------------------------------------------------
    - name: Test
      working-directory: ${{ steps.paths.outputs.build_dir }}
      run: ctest --build-config ${{ matrix.build_type }}
